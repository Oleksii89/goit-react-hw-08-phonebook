{"version":3,"file":"static/js/671.66895e8e.chunk.js","mappings":"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","sources":["redux/contacts.selectors.js","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.styled.js","Components/ContactItem/ContactItem.styled.js","Components/ContactItem/ContactItem.jsx","Components/ContactList/ContactList.styled.js","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contactsData;\nexport const selectContactsIsLoading = state => state.contacts.isLoading;\nexport const selectContactsError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filterData;\n","import { useEffect } from 'react';\nimport {\n  StyledButton,\n  StyledForm,\n  StyledInput,\n  StyledLabel,\n} from './ContactForm.styled.';\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, fetchContacts } from 'redux/contactsSlice';\nimport { useForm } from 'react-hook-form';\nimport { selectContacts } from 'redux/contacts.selectors';\n\nconst ContactForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onSubmit = data => {\n    contacts.some(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase()\n    )\n      ? alert(`${data.name} is already in contacts`)\n      : dispatch(addContact(data));\n    reset();\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <StyledLabel>\n        <span>Name:</span>\n        <StyledInput {...register('name', { required: true })} type=\"text\" />\n        {errors.name && <span>This field is required</span>}\n      </StyledLabel>\n\n      <StyledLabel>\n        <span>Number:</span>\n        <StyledInput {...register('number', { required: true })} type=\"text\" />\n        {errors.number && <span>This field is required</span>}\n      </StyledLabel>\n\n      <StyledButton type=\"submit\">Add contact</StyledButton>\n    </StyledForm>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\nexport const StyledFilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const StyledFilterButton = styled.button`\n  width: 60px;\n  background-color: none;\n  box-sizing: border-box;\n  height: 24px;\n  background-color: white;\n  cursor: pointer;\n  border-radius: 4px;\n  font-weight: 400;\n  font-size: 15px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledContactItemLi = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n","import { StyledFilterButton } from 'Components/Filter/Filter.styled';\nimport { StyledContactItemLi } from './ContactItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contactsSlice';\nimport { useEffect } from 'react';\nimport { Loader } from 'Components/Loader/Loader';\nimport {\n  selectContacts,\n  selectContactsError,\n  selectContactsIsLoading,\n} from 'redux/contacts.selectors';\n\nexport const ContactIem = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n\n  const filter = useSelector(state => state.filter.filterData);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      {filteredContacts.map(({ name, number, id }) => (\n        <StyledContactItemLi key={id}>\n          {name} : {[number]}\n          <StyledFilterButton\n            type=\"button\"\n            onClick={() => {\n              onDeleteContact(id);\n            }}\n          >\n            Delete\n          </StyledFilterButton>\n        </StyledContactItemLi>\n      ))}\n    </div>\n  );\n};\n","import styled from 'styled-components';\nexport const ContactListUl = styled.ul`\n  width: 400px;\n  padding: 0;\n`;\n","import { ContactListUl } from './ContactList.styled';\n\nexport const ContactList = ({ children }) => {\n  return <ContactListUl>{children}</ContactListUl>;\n};\n","import {\n  StyledInput,\n  StyledLabel,\n} from 'Components/ContactForm/ContactForm.styled.';\nimport { StyledFilterContainer } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filter.filterData);\n  const handleFilter = evt => {\n    dispatch(setFilter(evt.currentTarget.value));\n  };\n\n  const dispatch = useDispatch();\n  return (\n    <StyledFilterContainer>\n      <StyledLabel>Find contact by name</StyledLabel>\n      <StyledInput\n        type=\"text\"\n        value={filter}\n        onChange={handleFilter}\n      ></StyledInput>\n    </StyledFilterContainer>\n  );\n};\n","import ContactForm from 'Components/ContactForm/ContactForm';\nimport { ContactIem } from 'Components/ContactItem/ContactItem';\nimport { ContactList } from 'Components/ContactList/ContactList';\nimport { Filter } from 'Components/Filter/Filter';\nimport React from 'react';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList>\n        <ContactIem />\n      </ContactList>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","contactsData","selectContactsIsLoading","isLoading","selectContactsError","error","_useForm","useForm","register","handleSubmit","reset","errors","formState","useSelector","dispatch","useDispatch","useEffect","fetchContacts","_jsxs","StyledForm","onSubmit","data","some","contact","name","toLowerCase","alert","concat","addContact","children","StyledLabel","_jsx","StyledInput","_objectSpread","required","type","number","StyledButton","StyledFilterContainer","styled","_templateObject","_taggedTemplateLiteral","StyledFilterButton","_templateObject2","StyledContactItemLi","ContactIem","filter","filterData","filteredContacts","includes","Loader","map","_ref","id","onClick","contactId","deleteContact","ContactListUl","ContactList","Filter","value","onChange","evt","setFilter","currentTarget","ContactForm"],"sourceRoot":""}